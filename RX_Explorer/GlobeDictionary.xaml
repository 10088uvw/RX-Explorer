<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="RX_Explorer.GlobeDictionary"
                    xmlns:local="using:Microsoft.UI.Xaml.Controls.Primitives"
                    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Dark">
            <AcrylicBrush x:Key="ElementAccentAcrylicBrush"
                          BackgroundSource="Backdrop"
                          TintColor="Gray"
                          TintOpacity="0.1"
                          FallbackColor="{ThemeResource ElementFallBackBlackColor}" />

            <AcrylicBrush x:Key="ElementTransparentAcrylicBrush"
                          BackgroundSource="Backdrop"
                          TintColor="Black"
                          TintOpacity="0.3"
                          FallbackColor="{StaticResource ElementFallBackBlackDarkerColor}" />

            <!-- Bug fixed in WinUI 2.6.1.....Start -->
            <StaticResource x:Key="GridViewItemBackgroundSelected"
                            ResourceKey="AccentFillColorDefaultBrush" />
            <StaticResource x:Key="GridViewItemBackgroundSelectedPointerOver"
                            ResourceKey="AccentFillColorSecondaryBrush" />
            <StaticResource x:Key="GridViewItemBackgroundSelectedPressed"
                            ResourceKey="AccentFillColorTertiaryBrush" />
            <StaticResource x:Key="GridViewItemCheckBrush"
                            ResourceKey="TextOnAccentFillColorPrimary" />
            <StaticResource x:Key="GridViewItemCheckBoxBrush"
                            ResourceKey="ControlStrongFillColorDefault" />
            <StaticResource x:Key="ListViewItemBackgroundSelected"
                            ResourceKey="AccentFillColorDefaultBrush" />
            <StaticResource x:Key="ListViewItemBackgroundSelectedPointerOver"
                            ResourceKey="AccentFillColorSecondaryBrush" />
            <StaticResource x:Key="ListViewItemBackgroundSelectedPressed"
                            ResourceKey="AccentFillColorTertiaryBrush" />
            <StaticResource x:Key="ListViewItemForegroundSelected"
                            ResourceKey="TextOnAccentFillColorPrimaryBrush" />
            <StaticResource x:Key="ListViewItemForegroundSelectedPointerOver"
                            ResourceKey="TextOnAccentFillColorPrimaryBrush" />
            <StaticResource x:Key="ListViewItemForegroundSelectedPressed"
                            ResourceKey="TextOnAccentFillColorSecondaryBrush" />
            <!-- Bug fixed in WinUI 2.6.1.....End -->

            <!--<AcrylicBrush x:Key="TreeViewItemBackgroundSelected"
                          BackgroundSource="Backdrop"
                          TintColor="{ThemeResource SystemAccentColor}"
                          TintOpacity="0.8"
                          FallbackColor="{ThemeResource SystemAccentColorDark1}" />

            <AcrylicBrush x:Key="TreeViewItemBackgroundSelectedPointerOver"
                          BackgroundSource="Backdrop"
                          TintColor="{ThemeResource SystemAccentColorDark1}"
                          TintOpacity="0.8"
                          FallbackColor="{ThemeResource SystemAccentColorDark2}" />

            <AcrylicBrush x:Key="TreeViewItemBackgroundSelectedPressed"
                          BackgroundSource="Backdrop"
                          TintColor="{ThemeResource SystemAccentColorDark2}"
                          TintOpacity="0.8"
                          FallbackColor="{ThemeResource SystemAccentColorDark3}" />-->

            <AcrylicBrush x:Key="TabViewItemHeaderBackgroundSelected"
                          BackgroundSource="Backdrop"
                          TintColor="Black"
                          TintOpacity="0.5"
                          FallbackColor="{ThemeResource ElementFallBackBlackDarkerColor}" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <AcrylicBrush x:Key="ElementAccentAcrylicBrush"
                          BackgroundSource="Backdrop"
                          TintColor="Gray"
                          TintOpacity="0.1"
                          FallbackColor="{ThemeResource ElementFallBackWhiteColor}" />

            <AcrylicBrush x:Key="ElementTransparentAcrylicBrush"
                          BackgroundSource="Backdrop"
                          TintColor="Gray"
                          TintOpacity="0.3"
                          FallbackColor="{StaticResource ElementFallBackWhiteLighterColor}" />

            <!-- Bug fixed in WinUI 2.6.1.....Start -->
            <StaticResource x:Key="GridViewItemBackgroundSelected"
                            ResourceKey="AccentFillColorDefaultBrush" />
            <StaticResource x:Key="GridViewItemBackgroundSelectedPressed"
                            ResourceKey="AccentFillColorTertiaryBrush" />
            <StaticResource x:Key="GridViewItemCheckBrush"
                            ResourceKey="TextOnAccentFillColorPrimary" />
            <StaticResource x:Key="GridViewItemCheckBoxBrush"
                            ResourceKey="ControlStrongFillColorDefault" />
            <StaticResource x:Key="ListViewItemBackgroundSelected"
                            ResourceKey="AccentFillColorDefaultBrush" />
            <StaticResource x:Key="ListViewItemBackgroundSelectedPressed"
                            ResourceKey="AccentFillColorTertiaryBrush" />
            <StaticResource x:Key="ListViewItemForegroundSelected"
                            ResourceKey="TextOnAccentFillColorPrimaryBrush" />
            <StaticResource x:Key="ListViewItemForegroundSelectedPointerOver"
                            ResourceKey="TextOnAccentFillColorPrimaryBrush" />
            <StaticResource x:Key="ListViewItemForegroundSelectedPressed"
                            ResourceKey="TextOnAccentFillColorSecondaryBrush" />
            <!-- Bug fixed in WinUI 2.6.1.....End -->

            <!--<AcrylicBrush x:Key="TreeViewItemBackgroundSelected"
                          BackgroundSource="Backdrop"
                          TintColor="{ThemeResource SystemAccentColor}"
                          TintOpacity="0.8"
                          FallbackColor="{ThemeResource SystemAccentColorLight1}" />

            <AcrylicBrush x:Key="TreeViewItemBackgroundSelectedPointerOver"
                          BackgroundSource="Backdrop"
                          TintColor="{ThemeResource SystemAccentColorLight1}"
                          TintOpacity="0.8"
                          FallbackColor="{ThemeResource SystemAccentColorLight2}" />

            <AcrylicBrush x:Key="TreeViewItemBackgroundSelectedPressed"
                          BackgroundSource="Backdrop"
                          TintColor="{ThemeResource SystemAccentColorLight2}"
                          TintOpacity="0.8"
                          FallbackColor="{ThemeResource SystemAccentColorLight3}" />-->
            
            <AcrylicBrush x:Key="TabViewItemHeaderBackgroundSelected"
                          BackgroundSource="Backdrop"
                          TintColor="White"
                          TintOpacity="0.5"
                          FallbackColor="{StaticResource ElementFallBackWhiteLighterColor}" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Color x:Key="ElementFallBackBlackColor">#7F000000</Color>
    <Color x:Key="ElementFallBackBlackDarkerColor">#B4000000</Color>
    <Color x:Key="ElementFallBackWhiteColor">#7FDCDCDC</Color>
    <Color x:Key="ElementFallBackWhiteLighterColor">#DCDCDCDC</Color>

    <CornerRadius x:Key="FlyoutCornerRadius">8,8,8,8</CornerRadius>

    <AcrylicBrush x:Key="DialogAcrylicBrush"
                  TintColor="{ThemeResource SystemAltHighColor}"
                  TintOpacity="0.6"
                  FallbackColor="{ThemeResource SystemAltMediumColor}"/>

    <x:Double x:Key="ContentDialogMaxWidth">550</x:Double>
    <x:Double x:Key="ContentDialogMaxHeight">700</x:Double>
    <x:Double x:Key="TeachingTipMaxWidth">400</x:Double>

    <!-- Bug fixed in WinUI 2.6.1.....Start -->
    <Style x:Key="CommandBarFlyoutAppBarButtonStyle"
           TargetType="AppBarButton"
           BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyleBase}" />
    
    <Style x:Key="CommandBarFlyoutAppBarButtonStyleBase"
           TargetType="AppBarButton">
        <Setter Property="Background"
                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackground}" />
        <Setter Property="Foreground"
                Value="{ThemeResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Width"
                Value="NaN" />
        <Setter Property="UseSystemFocusVisuals"
                Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="AllowFocusOnInteraction"
                Value="False" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="local:CommandBarFlyoutCommandBarAutomationProperties.ControlType"
                Value="MenuItem" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AppBarButton">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="ContentRoot.Width"
                                                Value="NaN" />
                                        <Setter Target="ContentViewbox.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="ContentViewbox.Margin"
                                                Value="12,0,12,0" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithToggleButtons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="ContentRoot.Width"
                                                Value="NaN" />
                                        <Setter Target="ContentViewbox.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin"
                                                Value="39,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithMenuIcons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="ContentRoot.Width"
                                                Value="NaN" />
                                        <Setter Target="ContentViewbox.HorizontalAlignment"
                                                Value="Left" />
                                        <Setter Target="ContentViewbox.VerticalAlignment"
                                                Value="Center" />
                                        <Setter Target="ContentViewbox.Width"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Height"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Margin"
                                                Value="12,0,12,0" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin"
                                                Value="39,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="ContentRoot.Width"
                                                Value="NaN" />
                                        <Setter Target="ContentViewbox.HorizontalAlignment"
                                                Value="Left" />
                                        <Setter Target="ContentViewbox.VerticalAlignment"
                                                Value="Center" />
                                        <Setter Target="ContentViewbox.Width"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Height"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Margin"
                                                Value="39,0,12,0" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin"
                                                Value="67,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowPressed">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowSubMenuOpened">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource CommandBarFlyoutAppBarButtonSubItemChevronSubMenuOpenedForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputModeStates">
                                <VisualState x:Name="InputModeDefault" />
                                <VisualState x:Name="TouchInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowTextLabel.Padding"
                                                Value="0,9,0,11" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="GameControllerInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowTextLabel.Padding"
                                                Value="0,9,0,11" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                    <VisualState.Setters>
                                        <Setter Target="KeyboardAcceleratorTextLabel.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout">
                                    <VisualState.Setters>
                                        <Setter Target="SubItemChevron.Visibility"
                                                Value="{ThemeResource AppBarButtonHasFlyoutChevronVisibility}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="AppBarButtonInnerBorder"
                                Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                Control.IsTemplateFocusTarget="True">

                            <Border.BackgroundTransition>
                                <BrushTransition Duration="0:0:0.083" />
                            </Border.BackgroundTransition>
                        </Border>

                        <Grid x:Name="ContentRoot"
                              Width="40">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox x:Name="ContentViewbox"
                                     Height="16"
                                     HorizontalAlignment="Stretch"
                                     AutomationProperties.AccessibilityView="Raw">
                                <ContentPresenter x:Name="Content"
                                                  Content="{TemplateBinding Icon}"
                                                  Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                            <TextBlock x:Name="OverflowTextLabel"
                                       Text="{TemplateBinding Label}"
                                       Style="{ThemeResource BodyTextBlockStyle}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       TextAlignment="Left"
                                       TextTrimming="Clip"
                                       TextWrapping="NoWrap"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Center"
                                       Margin="12,0,12,0"
                                       Padding="0,6,0,7"
                                       Visibility="Collapsed"
                                       AutomationProperties.AccessibilityView="Raw" />
                            <TextBlock x:Name="KeyboardAcceleratorTextLabel"
                                       Grid.Column="1"
                                       Style="{ThemeResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                       MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                       Margin="24,0,12,0"
                                       Foreground="{ThemeResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Visibility="Collapsed"
                                       AutomationProperties.AccessibilityView="Raw" />
                            <FontIcon x:Name="SubItemChevron"
                                      Grid.Column="2"
                                      Glyph="&#xE76C;"
                                      FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                      FontSize="12"
                                      AutomationProperties.AccessibilityView="Raw"
                                      Foreground="{ThemeResource CommandBarFlyoutAppBarButtonSubItemChevronForeground}"
                                      Margin="12,0,12,0"
                                      MirroredWhenRightToLeft="True"
                                      VerticalAlignment="Center"
                                      Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Bug fixed in WinUI 2.6.1.....End -->

    <Style x:Key="BladeBugFixForWinUI25" 
           TargetType="controls:BladeItem">
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="CloseButtonForeground"
                Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="TitleBarBackground"
                Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" />
        <Setter Property="Background"
                Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
        <Setter Property="Foreground"
                Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="TabNavigation"
                Value="Local" />
        <Setter Property="IsHoldingEnabled"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="MinWidth"
                Value="{ThemeResource GridViewItemMinWidth}" />
        <Setter Property="MinHeight"
                Value="{ThemeResource GridViewItemMinHeight}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource CardStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="IsExpanded"
                Value="True" />
        <Setter Property="Width"
                Value="320" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Margin="12,7,0,9"
                               VerticalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:BladeItem">
                    <Grid BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandedStates">
                                <VisualState x:Name="Expanded" />
                                <VisualState x:Name="Collapsed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="EnlargeButton.Content"
                                                Value="&#xE740;" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid Background="{TemplateBinding TitleBarBackground}"
                              Visibility="{TemplateBinding TitleBarVisibility}"
                              Height="32">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="TitleBar"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            <Button Name="EnlargeButton"
                                    Grid.Column="1"
                                    TabIndex="0"
                                    HorizontalAlignment="Right"
                                    Background="{TemplateBinding CloseButtonBackground}"
                                    Style="{StaticResource ButtonRevealStyle}"
                                    BorderThickness="1"
                                    VerticalAlignment="Stretch"
                                    Content="&#xE73F;"
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="14"
                                    Foreground="{TemplateBinding CloseButtonForeground}" />
                            <Button Name="CloseButton"
                                    Grid.Column="2"
                                    TabIndex="0"
                                    HorizontalAlignment="Right"
                                    Background="{TemplateBinding CloseButtonBackground}"
                                    Style="{StaticResource ButtonRevealStyle}"
                                    BorderThickness="1"
                                    VerticalAlignment="Stretch"
                                    Content="&#xE711;"
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="14"
                                    Foreground="{TemplateBinding CloseButtonForeground}" />
                        </Grid>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Row="1"
                                          VerticalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          Visibility="{TemplateBinding IsOpen}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="OnlyClickableButtonStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="{ThemeResource ButtonBackground}" />
        <Setter Property="BackgroundSizing"
                Value="OuterBorderEdge" />
        <Setter Property="Foreground"
                Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter Property="Padding"
                Value="{StaticResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals"
                Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin"
                Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter x:Name="ContentPresenter"
                                      AutomationProperties.AccessibilityView="Raw"
                                      BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                      Background="{TemplateBinding Background}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="ListHeaderButtonStyle">
        <Setter Property="Background"
                Value="{ThemeResource ButtonRevealBackground}" />
        <Setter Property="Foreground"
                Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource ButtonRevealBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
        <Setter Property="Padding"
                Value="{ThemeResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals"
                Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin"
                Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Background="{TemplateBinding Background}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          CornerRadius="{TemplateBinding CornerRadius}"
                                          Content="{TemplateBinding Content}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
           TargetType="Thumb">
        <Setter Property="UseSystemFocusVisuals"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="{ThemeResource SliderThumbBackground}" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="Width"
                Value="8" />
        <Setter Property="FocusVisualMargin"
                Value="-14,-6,-14,-6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RangeSelectorStyle"
           TargetType="controls:RangeSelector">
        <Setter Property="Background"
                Value="{ThemeResource SliderTrackFill}" />
        <Setter Property="BorderThickness"
                Value="{ThemeResource SliderBorderThemeThickness}" />
        <Setter Property="Foreground"
                Value="{ThemeResource SliderTrackValueFill}" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RangeSelector">
                    <Grid x:Name="ControlGrid"
                          Height="24">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MinPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MinThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightChromeHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MaxPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightChromeHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveRectangle"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MinThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MinThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OutOfRangeContentContainer"
                                Background="Transparent"
                                Grid.Column="1">
                            <Rectangle x:Name="BackgroundElement"
                                       Fill="{TemplateBinding Background}"
                                       Height="2" />
                        </Border>
                        <Canvas x:Name="ContainerCanvas"
                                Background="Transparent"
                                Grid.Column="1">
                            <Rectangle x:Name="ActiveRectangle"
                                       Fill="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Stretch"
                                       Height="2"
                                       VerticalAlignment="Center" />
                            <Thumb x:Name="MinThumb"
                                   IsTabStop="True"
                                   AutomationProperties.Name="Min thumb"
                                   Style="{StaticResource SliderThumbStyle}"
                                   TabIndex="0" />
                            <Thumb x:Name="MaxThumb"
                                   IsTabStop="True"
                                   AutomationProperties.Name="Max thumb"
                                   Style="{StaticResource SliderThumbStyle}"
                                   TabIndex="1" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewStyleWithFixedHeader" TargetType="ListView">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="IsSwipeEnabled" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="ItemContainerTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <AddDeleteThemeTransition/>
                    <ContentThemeTransition/>
                    <ReorderThemeTransition/>
                    <EntranceThemeTransition IsStaggeringEnabled="False"/>
                </TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ContentControl Content="{TemplateBinding Header}"
                                            HorizontalContentAlignment="Stretch"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTransitions="{TemplateBinding HeaderTransitions}" />
                            <ScrollViewer x:Name="ScrollViewer"
                                          Grid.Row="1"
                                          AutomationProperties.AccessibilityView="Raw"
                                          BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                          IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                          IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                          IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                          IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                          IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                          TabNavigation="{TemplateBinding TabNavigation}"
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter Footer="{TemplateBinding Footer}"
                                                FooterTransitions="{TemplateBinding FooterTransitions}"
                                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                                Padding="{TemplateBinding Padding}" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SplitButtonStyleInOption"
           TargetType="SplitButton">
        <Setter Property="Background"
                Value="{ThemeResource SplitButtonBackground}" />
        <Setter Property="Foreground"
                Value="{ThemeResource SplitButtonForeground}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource SplitButtonBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{ThemeResource SplitButtonBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals"
                Value="True" />
        <Setter Property="FocusVisualMargin"
                Value="-3" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Padding"
                Value="{ThemeResource ButtonPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="SplitButton">
                    <Grid x:Name="RootGrid"
                          Background="{TemplateBinding Background}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Background"
                                        Value="Transparent" />
                                <Setter Property="Foreground"
                                        Value="{ThemeResource SplitButtonForeground}" />
                                <Setter Property="BorderBrush"
                                        Value="Transparent" />
                                <Setter Property="BorderThickness"
                                        Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment"
                                        Value="Left" />
                                <Setter Property="VerticalAlignment"
                                        Value="Center" />
                                <Setter Property="FontFamily"
                                        Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight"
                                        Value="Normal" />
                                <Setter Property="FontSize"
                                        Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals"
                                        Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin"
                                        Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid"
                                                  Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground"
                                                                        Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter x:Name="ContentPresenter"
                                                                  AutomationProperties.AccessibilityView="Raw"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="FirstColumn"
                                              MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}"
                                              Width="*" />
                            <ColumnDefinition x:Name="SecondColumn"
                                              Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <Setter Target="PrimaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="PrimaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPointerOver}" />
                                        <Setter Target="SecondaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPointerOver}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackground}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="PrimaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="PrimaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background"
                                                Value="{ThemeResource SystemAccentColor}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight" />
                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)"
                                                Value="0" />
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)"
                                                Value="2" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PrimaryBackgroundGrid" />
                        <Grid x:Name="SecondaryBackgroundGrid"
                              Grid.Column="1" />
                        <Grid x:Name="Border"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              CornerRadius="{TemplateBinding CornerRadius}"
                              Grid.ColumnSpan="2" />
                        <Button x:Name="PrimaryButton"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Grid.Column="0"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Stretch"
                                IsTabStop="False"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch" />
                        <Button x:Name="SecondaryButton"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                IsTabStop="False"
                                Padding="0,0,8,0"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="Stretch">
                            <TextBlock AutomationProperties.AccessibilityView="Raw"
                                       FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                       FontSize="12"
                                       HorizontalAlignment="Right"
                                       Text="&#xE70D;"
                                       VerticalAlignment="Center" />
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomExpanderHeaderStyle"
           TargetType="ToggleButton">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="2,0,0,0" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="RootGrid"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Rectangle x:Name="HoverPanel"
                                   Grid.ColumnSpan="2"
                                   Fill="Transparent" />

                        <Slider x:Name="ArrowRotation"
                                Maximum="180"
                                Minimum="-180"
                                Visibility="Collapsed"
                                Value="90" />

                        <FontIcon x:Name="Arrow"
                                  Margin="12"
                                  FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                  FontSize="12"
                                  Glyph="&#xE76C;"
                                  RenderTransformOrigin="0.5,0.5">
                            <FontIcon.RenderTransform>
                                <RotateTransform />
                            </FontIcon.RenderTransform>
                        </FontIcon>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="1"
                                          Margin="0,0,12,0"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          Foreground="{TemplateBinding Foreground}"
                                          RenderTransformOrigin="0.5,0.5" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="0.0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="0.0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="0.0"
                                                         Duration="0:0:0.1" />
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="0.0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="{Binding ElementName=ArrowRotation, Path=Value}"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="{Binding ElementName=ArrowRotation, Path=Value}"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="{Binding ElementName=ArrowRotation, Path=Value}"
                                                         Duration="0:0:0.1" />
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimation BeginTime="0:0:0"
                                                         Storyboard.TargetName="Arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="{Binding ElementName=ArrowRotation, Path=Value}"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminatePointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminatePressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminateDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualState x:Name="RightDirection" />

                                <VisualState x:Name="DownDirection" />

                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="ArrowRotation.Value"
                                                Value="-90" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="UpDirection">
                                    <VisualState.Setters>
                                        <Setter Target="ArrowRotation.Value"
                                                Value="-90" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>